// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// BEDMatrix__multiply_residuals
RcppExport SEXP BEDMatrix__multiply_residuals(SEXP xp_, SEXP n_, SEXP p_, SEXP i_, SEXP j_, SEXP iv_, SEXP r_);
RcppExport SEXP _snpnet_BEDMatrix__multiply_residuals(SEXP xp_SEXP, SEXP n_SEXP, SEXP p_SEXP, SEXP i_SEXP, SEXP j_SEXP, SEXP iv_SEXP, SEXP r_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp_(xp_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_(n_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type p_(p_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type i_(i_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type j_(j_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type iv_(iv_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_(r_SEXP);
    rcpp_result_gen = Rcpp::wrap(BEDMatrix__multiply_residuals(xp_, n_, p_, i_, j_, iv_, r_));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP BEDMatrix__multiply_residuals(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_snpnet_BEDMatrix__multiply_residuals", (DL_FUNC) &_snpnet_BEDMatrix__multiply_residuals, 7},
    {"BEDMatrix__multiply_residuals",         (DL_FUNC) &BEDMatrix__multiply_residuals,         7},
    {NULL, NULL, 0}
};

RcppExport void R_init_snpnet(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
